server {
    listen      443 ssl;
    server_name 138.197.215.103 secchat.me www.secchat.me;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
    #    root   /usr/share/nginx/secchat_server/;
    #    index  index.html index.htm;
    #proxy_set_header  X-Forwarded-For $remote_addr;
    #proxy_set_header Host $http_host;
    proxy_pass https://www.secchat.me:3339;

    }

    #proxy_connect_timeout 1s;
    #proxy_timeout 3s;
    #proxy_pass    stream_mongo_backend; 

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    #location /http/ {
    #    proxy_pass https://mongo_backend;
    #}

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    #listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.secchat.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.secchat.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    ssl_dhparam /etc/nginx/ssl/dhparam.pem; # manually managed

}
    
server {
    if ($host = www.secchat.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen       80;
    server_name  www.secchat.me;
    rewrite      ^  https://$host$request_uri? permanent;
}

server {
    listen 80;
    server_name 138.197.215.103;

    return 301 $scheme://secchat.me$request_uri;
}
